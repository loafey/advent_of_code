╍ Running current day ╍
╍╍╍ Part 1: ╍╍╍
From 0 to 0 costs:
	if top is <: 0 (top becomes (<))
	if top is >: 0 (top becomes (>))
	if top is A: 0 (top becomes (A))
	if top is ^: 0 (top becomes (^))
	if top is v: 0 (top becomes (v))
From 0 to 1 costs:
	if top is <: 6 (top becomes (<))
	if top is >: 6 (top becomes (<))
	if top is A: 5 (top becomes (<))
	if top is ^: 4 (top becomes (<))
	if top is v: 5 (top becomes (<))
From 0 to 2 costs:
	if top is <: 3 (top becomes (^))
	if top is >: 3 (top becomes (^))
	if top is A: 2 (top becomes (^))
	if top is ^: 1 (top becomes (^))
	if top is v: 2 (top becomes (^))
From 0 to 3 costs:
	if top is <: 6 (top becomes (>))
	if top is >: 4 (top becomes (^))
	if top is A: 5 (top becomes (^))
	if top is ^: 4 (top becomes (>))
	if top is v: 5 (top becomes (>))
From 0 to 4 costs:
	if top is <: 7 (top becomes (<))
	if top is >: 7 (top becomes (<))
	if top is A: 6 (top becomes (<))
	if top is ^: 5 (top becomes (<))
	if top is v: 6 (top becomes (<))
From 0 to 5 costs:
	if top is <: 4 (top becomes (^))
	if top is >: 4 (top becomes (^))
	if top is A: 3 (top becomes (^))
	if top is ^: 2 (top becomes (^))
	if top is v: 3 (top becomes (^))
From 0 to 6 costs:
	if top is <: 7 (top becomes (^))
	if top is >: 5 (top becomes (^))
	if top is A: 6 (top becomes (^))
	if top is ^: 5 (top becomes (>))
	if top is v: 6 (top becomes (>))
From 0 to 7 costs:
	if top is <: 8 (top becomes (<))
	if top is >: 8 (top becomes (<))
	if top is A: 7 (top becomes (<))
	if top is ^: 6 (top becomes (<))
	if top is v: 7 (top becomes (<))
From 0 to 8 costs:
	if top is <: 5 (top becomes (^))
	if top is >: 5 (top becomes (^))
	if top is A: 4 (top becomes (^))
	if top is ^: 3 (top becomes (^))
	if top is v: 4 (top becomes (^))
From 0 to 9 costs:
	if top is <: 8 (top becomes (^))
	if top is >: 6 (top becomes (^))
	if top is A: 7 (top becomes (^))
	if top is ^: 6 (top becomes (>))
	if top is v: 7 (top becomes (^))
From 0 to A costs:
	if top is <: 3 (top becomes (>))
	if top is >: 1 (top becomes (>))
	if top is A: 2 (top becomes (>))
	if top is ^: 3 (top becomes (>))
	if top is v: 2 (top becomes (>))
From 1 to 0 costs:
	if top is <: 5 (top becomes (v))
	if top is >: 3 (top becomes (v))
	if top is A: 4 (top becomes (v))
	if top is ^: 5 (top becomes (v))
	if top is v: 4 (top becomes (v))
From 1 to 1 costs:
	if top is <: 0 (top becomes (<))
	if top is >: 0 (top becomes (>))
	if top is A: 0 (top becomes (A))
	if top is ^: 0 (top becomes (^))
	if top is v: 0 (top becomes (v))
From 1 to 2 costs:
	if top is <: 3 (top becomes (>))
	if top is >: 1 (top becomes (>))
	if top is A: 2 (top becomes (>))
	if top is ^: 3 (top becomes (>))
	if top is v: 2 (top becomes (>))
From 1 to 3 costs:
	if top is <: 4 (top becomes (>))
	if top is >: 2 (top becomes (>))
	if top is A: 3 (top becomes (>))
	if top is ^: 4 (top becomes (>))
	if top is v: 3 (top becomes (>))
From 1 to 4 costs:
	if top is <: 3 (top becomes (^))
	if top is >: 3 (top becomes (^))
	if top is A: 2 (top becomes (^))
	if top is ^: 1 (top becomes (^))
	if top is v: 2 (top becomes (^))
From 1 to 5 costs:
	if top is <: 6 (top becomes (>))
	if top is >: 4 (top becomes (^))
	if top is A: 5 (top becomes (>))
	if top is ^: 4 (top becomes (>))
	if top is v: 5 (top becomes (^))
From 1 to 6 costs:
	if top is <: 7 (top becomes (>))
	if top is >: 5 (top becomes (^))
	if top is A: 6 (top becomes (^))
	if top is ^: 5 (top becomes (>))
	if top is v: 6 (top becomes (>))
From 1 to 7 costs:
	if top is <: 4 (top becomes (^))
	if top is >: 4 (top becomes (^))
	if top is A: 3 (top becomes (^))
	if top is ^: 2 (top becomes (^))
	if top is v: 3 (top becomes (^))
From 1 to 8 costs:
	if top is <: 7 (top becomes (^))
	if top is >: 5 (top becomes (^))
	if top is A: 6 (top becomes (>))
	if top is ^: 5 (top becomes (>))
	if top is v: 6 (top becomes (>))
From 1 to 9 costs:
	if top is <: 8 (top becomes (>))
	if top is >: 6 (top becomes (^))
	if top is A: 7 (top becomes (^))
	if top is ^: 6 (top becomes (>))
	if top is v: 7 (top becomes (>))
From 1 to A costs:
	if top is <: 6 (top becomes (v))
	if top is >: 4 (top becomes (v))
	if top is A: 5 (top becomes (v))
	if top is ^: 6 (top becomes (v))
	if top is v: 5 (top becomes (v))
From 2 to 0 costs:
	if top is <: 2 (top becomes (v))
	if top is >: 2 (top becomes (v))
	if top is A: 3 (top becomes (v))
	if top is ^: 2 (top becomes (v))
	if top is v: 1 (top becomes (v))
From 2 to 1 costs:
	if top is <: 1 (top becomes (<))
	if top is >: 3 (top becomes (<))
	if top is A: 4 (top becomes (<))
	if top is ^: 3 (top becomes (<))
	if top is v: 2 (top becomes (<))
From 2 to 2 costs:
	if top is <: 0 (top becomes (<))
	if top is >: 0 (top becomes (>))
	if top is A: 0 (top becomes (A))
	if top is ^: 0 (top becomes (^))
	if top is v: 0 (top becomes (v))
From 2 to 3 costs:
	if top is <: 3 (top becomes (>))
	if top is >: 1 (top becomes (>))
	if top is A: 2 (top becomes (>))
	if top is ^: 3 (top becomes (>))
	if top is v: 2 (top becomes (>))
From 2 to 4 costs:
	if top is <: 4 (top becomes (^))
	if top is >: 6 (top becomes (^))
	if top is A: 5 (top becomes (<))
	if top is ^: 4 (top becomes (<))
	if top is v: 5 (top becomes (<))
From 2 to 5 costs:
	if top is <: 3 (top becomes (^))
	if top is >: 3 (top becomes (^))
	if top is A: 2 (top becomes (^))
	if top is ^: 1 (top becomes (^))
	if top is v: 2 (top becomes (^))
From 2 to 6 costs:
	if top is <: 6 (top becomes (>))
	if top is >: 4 (top becomes (^))
	if top is A: 5 (top becomes (^))
	if top is ^: 4 (top becomes (>))
	if top is v: 5 (top becomes (>))
From 2 to 7 costs:
	if top is <: 5 (top becomes (^))
	if top is >: 7 (top becomes (^))
	if top is A: 6 (top becomes (<))
	if top is ^: 5 (top becomes (<))
	if top is v: 6 (top becomes (<))
From 2 to 8 costs:
	if top is <: 4 (top becomes (^))
	if top is >: 4 (top becomes (^))
	if top is A: 3 (top becomes (^))
	if top is ^: 2 (top becomes (^))
	if top is v: 3 (top becomes (^))
From 2 to 9 costs:
	if top is <: 7 (top becomes (^))
	if top is >: 5 (top becomes (^))
	if top is A: 6 (top becomes (^))
	if top is ^: 5 (top becomes (>))
	if top is v: 6 (top becomes (>))
From 2 to A costs:
	if top is <: 4 (top becomes (>))
	if top is >: 3 (top becomes (v))
	if top is A: 4 (top becomes (v))
	if top is ^: 4 (top becomes (>))
	if top is v: 3 (top becomes (>))
From 3 to 0 costs:
	if top is <: 3 (top becomes (v))
	if top is >: 4 (top becomes (<))
	if top is A: 5 (top becomes (<))
	if top is ^: 4 (top becomes (<))
	if top is v: 3 (top becomes (<))
From 3 to 1 costs:
	if top is <: 2 (top becomes (<))
	if top is >: 4 (top becomes (<))
	if top is A: 5 (top becomes (<))
	if top is ^: 4 (top becomes (<))
	if top is v: 3 (top becomes (<))
From 3 to 2 costs:
	if top is <: 1 (top becomes (<))
	if top is >: 3 (top becomes (<))
	if top is A: 4 (top becomes (<))
	if top is ^: 3 (top becomes (<))
	if top is v: 2 (top becomes (<))
From 3 to 3 costs:
	if top is <: 0 (top becomes (<))
	if top is >: 0 (top becomes (>))
	if top is A: 0 (top becomes (A))
	if top is ^: 0 (top becomes (^))
	if top is v: 0 (top becomes (v))
From 3 to 4 costs:
	if top is <: 5 (top becomes (^))
	if top is >: 7 (top becomes (<))
	if top is A: 6 (top becomes (<))
	if top is ^: 5 (top becomes (<))
	if top is v: 6 (top becomes (<))
From 3 to 5 costs:
	if top is <: 4 (top becomes (^))
	if top is >: 6 (top becomes (^))
	if top is A: 5 (top becomes (<))
	if top is ^: 4 (top becomes (<))
	if top is v: 5 (top becomes (^))
From 3 to 6 costs:
	if top is <: 3 (top becomes (^))
	if top is >: 3 (top becomes (^))
	if top is A: 2 (top becomes (^))
	if top is ^: 1 (top becomes (^))
	if top is v: 2 (top becomes (^))
From 3 to 7 costs:
	if top is <: 6 (top becomes (^))
	if top is >: 8 (top becomes (^))
	if top is A: 7 (top becomes (<))
	if top is ^: 6 (top becomes (<))
	if top is v: 7 (top becomes (<))
From 3 to 8 costs:
	if top is <: 5 (top becomes (^))
	if top is >: 7 (top becomes (^))
	if top is A: 6 (top becomes (<))
	if top is ^: 5 (top becomes (<))
	if top is v: 6 (top becomes (^))
From 3 to 9 costs:
	if top is <: 4 (top becomes (^))
	if top is >: 4 (top becomes (^))
	if top is A: 3 (top becomes (^))
	if top is ^: 2 (top becomes (^))
	if top is v: 3 (top becomes (^))
From 3 to A costs:
	if top is <: 2 (top becomes (v))
	if top is >: 2 (top becomes (v))
	if top is A: 3 (top becomes (v))
	if top is ^: 2 (top becomes (v))
	if top is v: 1 (top becomes (v))
From 4 to 0 costs:
	if top is <: 6 (top becomes (v))
	if top is >: 4 (top becomes (v))
	if top is A: 5 (top becomes (v))
	if top is ^: 6 (top becomes (v))
	if top is v: 5 (top becomes (v))
From 4 to 1 costs:
	if top is <: 2 (top becomes (v))
	if top is >: 2 (top becomes (v))
	if top is A: 3 (top becomes (v))
	if top is ^: 2 (top becomes (v))
	if top is v: 1 (top becomes (v))
From 4 to 2 costs:
	if top is <: 4 (top becomes (>))
	if top is >: 3 (top becomes (v))
	if top is A: 4 (top becomes (v))
	if top is ^: 4 (top becomes (>))
	if top is v: 3 (top becomes (>))
From 4 to 3 costs:
	if top is <: 5 (top becomes (>))
	if top is >: 4 (top becomes (v))
	if top is A: 5 (top becomes (v))
	if top is ^: 5 (top becomes (>))
	if top is v: 4 (top becomes (>))
From 4 to 4 costs:
	if top is <: 0 (top becomes (<))
	if top is >: 0 (top becomes (>))
	if top is A: 0 (top becomes (A))
	if top is ^: 0 (top becomes (^))
	if top is v: 0 (top becomes (v))
From 4 to 5 costs:
	if top is <: 3 (top becomes (>))
	if top is >: 1 (top becomes (>))
	if top is A: 2 (top becomes (>))
	if top is ^: 3 (top becomes (>))
	if top is v: 2 (top becomes (>))
From 4 to 6 costs:
	if top is <: 4 (top becomes (>))
	if top is >: 2 (top becomes (>))
	if top is A: 3 (top becomes (>))
	if top is ^: 4 (top becomes (>))
	if top is v: 3 (top becomes (>))
From 4 to 7 costs:
	if top is <: 3 (top becomes (^))
	if top is >: 3 (top becomes (^))
	if top is A: 2 (top becomes (^))
	if top is ^: 1 (top becomes (^))
	if top is v: 2 (top becomes (^))
From 4 to 8 costs:
	if top is <: 6 (top becomes (^))
	if top is >: 4 (top becomes (^))
	if top is A: 5 (top becomes (^))
	if top is ^: 4 (top becomes (>))
	if top is v: 5 (top becomes (>))
From 4 to 9 costs:
	if top is <: 7 (top becomes (^))
	if top is >: 5 (top becomes (^))
	if top is A: 6 (top becomes (^))
	if top is ^: 5 (top becomes (>))
	if top is v: 6 (top becomes (>))
From 4 to A costs:
	if top is <: 7 (top becomes (v))
	if top is >: 5 (top becomes (v))
	if top is A: 6 (top becomes (v))
	if top is ^: 7 (top becomes (v))
	if top is v: 6 (top becomes (v))
From 5 to 0 costs:
	if top is <: 3 (top becomes (v))
	if top is >: 3 (top becomes (v))
	if top is A: 4 (top becomes (v))
	if top is ^: 3 (top becomes (v))
	if top is v: 2 (top becomes (v))
From 5 to 1 costs:
	if top is <: 3 (top becomes (v))
	if top is >: 4 (top becomes (<))
	if top is A: 5 (top becomes (<))
	if top is ^: 4 (top becomes (<))
	if top is v: 3 (top becomes (<))
From 5 to 2 costs:
	if top is <: 2 (top becomes (v))
	if top is >: 2 (top becomes (v))
	if top is A: 3 (top becomes (v))
	if top is ^: 2 (top becomes (v))
	if top is v: 1 (top becomes (v))
From 5 to 3 costs:
	if top is <: 4 (top becomes (>))
	if top is >: 3 (top becomes (v))
	if top is A: 4 (top becomes (v))
	if top is ^: 4 (top becomes (>))
	if top is v: 3 (top becomes (>))
From 5 to 4 costs:
	if top is <: 1 (top becomes (<))
	if top is >: 3 (top becomes (<))
	if top is A: 4 (top becomes (<))
	if top is ^: 3 (top becomes (<))
	if top is v: 2 (top becomes (<))
From 5 to 5 costs:
	if top is <: 0 (top becomes (<))
	if top is >: 0 (top becomes (>))
	if top is A: 0 (top becomes (A))
	if top is ^: 0 (top becomes (^))
	if top is v: 0 (top becomes (v))
From 5 to 6 costs:
	if top is <: 3 (top becomes (>))
	if top is >: 1 (top becomes (>))
	if top is A: 2 (top becomes (>))
	if top is ^: 3 (top becomes (>))
	if top is v: 2 (top becomes (>))
From 5 to 7 costs:
	if top is <: 4 (top becomes (^))
	if top is >: 6 (top becomes (^))
	if top is A: 5 (top becomes (<))
	if top is ^: 4 (top becomes (<))
	if top is v: 5 (top becomes (^))
From 5 to 8 costs:
	if top is <: 3 (top becomes (^))
	if top is >: 3 (top becomes (^))
	if top is A: 2 (top becomes (^))
	if top is ^: 1 (top becomes (^))
	if top is v: 2 (top becomes (^))
From 5 to 9 costs:
	if top is <: 6 (top becomes (^))
	if top is >: 4 (top becomes (^))
	if top is A: 5 (top becomes (>))
	if top is ^: 4 (top becomes (>))
	if top is v: 5 (top becomes (>))
From 5 to A costs:
	if top is <: 5 (top becomes (>))
	if top is >: 4 (top becomes (v))
	if top is A: 5 (top becomes (v))
	if top is ^: 5 (top becomes (>))
	if top is v: 4 (top becomes (>))
From 6 to 0 costs:
	if top is <: 4 (top becomes (v))
	if top is >: 5 (top becomes (<))
	if top is A: 6 (top becomes (<))
	if top is ^: 5 (top becomes (<))
	if top is v: 4 (top becomes (<))
From 6 to 1 costs:
	if top is <: 4 (top becomes (v))
	if top is >: 5 (top becomes (<))
	if top is A: 6 (top becomes (<))
	if top is ^: 5 (top becomes (<))
	if top is v: 4 (top becomes (<))
From 6 to 2 costs:
	if top is <: 3 (top becomes (v))
	if top is >: 4 (top becomes (<))
	if top is A: 5 (top becomes (<))
	if top is ^: 4 (top becomes (<))
	if top is v: 3 (top becomes (<))
From 6 to 3 costs:
	if top is <: 2 (top becomes (v))
	if top is >: 2 (top becomes (v))
	if top is A: 3 (top becomes (v))
	if top is ^: 2 (top becomes (v))
	if top is v: 1 (top becomes (v))
From 6 to 4 costs:
	if top is <: 2 (top becomes (<))
	if top is >: 4 (top becomes (<))
	if top is A: 5 (top becomes (<))
	if top is ^: 4 (top becomes (<))
	if top is v: 3 (top becomes (<))
From 6 to 5 costs:
	if top is <: 1 (top becomes (<))
	if top is >: 3 (top becomes (<))
	if top is A: 4 (top becomes (<))
	if top is ^: 3 (top becomes (<))
	if top is v: 2 (top becomes (<))
From 6 to 6 costs:
	if top is <: 0 (top becomes (<))
	if top is >: 0 (top becomes (>))
	if top is A: 0 (top becomes (A))
	if top is ^: 0 (top becomes (^))
	if top is v: 0 (top becomes (v))
From 6 to 7 costs:
	if top is <: 5 (top becomes (^))
	if top is >: 7 (top becomes (^))
	if top is A: 6 (top becomes (<))
	if top is ^: 5 (top becomes (<))
	if top is v: 6 (top becomes (^))
From 6 to 8 costs:
	if top is <: 4 (top becomes (^))
	if top is >: 6 (top becomes (^))
	if top is A: 5 (top becomes (<))
	if top is ^: 4 (top becomes (<))
	if top is v: 5 (top becomes (^))
From 6 to 9 costs:
	if top is <: 3 (top becomes (^))
	if top is >: 3 (top becomes (^))
	if top is A: 2 (top becomes (^))
	if top is ^: 1 (top becomes (^))
	if top is v: 2 (top becomes (^))
From 6 to A costs:
	if top is <: 3 (top becomes (v))
	if top is >: 3 (top becomes (v))
	if top is A: 4 (top becomes (v))
	if top is ^: 3 (top becomes (v))
	if top is v: 2 (top becomes (v))
From 7 to 0 costs:
	if top is <: 7 (top becomes (v))
	if top is >: 5 (top becomes (v))
	if top is A: 6 (top becomes (v))
	if top is ^: 7 (top becomes (v))
	if top is v: 6 (top becomes (v))
From 7 to 1 costs:
	if top is <: 3 (top becomes (v))
	if top is >: 3 (top becomes (v))
	if top is A: 4 (top becomes (v))
	if top is ^: 3 (top becomes (v))
	if top is v: 2 (top becomes (v))
From 7 to 2 costs:
	if top is <: 5 (top becomes (>))
	if top is >: 4 (top becomes (v))
	if top is A: 5 (top becomes (v))
	if top is ^: 5 (top becomes (>))
	if top is v: 4 (top becomes (>))
From 7 to 3 costs:
	if top is <: 6 (top becomes (>))
	if top is >: 5 (top becomes (v))
	if top is A: 6 (top becomes (v))
	if top is ^: 6 (top becomes (>))
	if top is v: 5 (top becomes (>))
From 7 to 4 costs:
	if top is <: 2 (top becomes (v))
	if top is >: 2 (top becomes (v))
	if top is A: 3 (top becomes (v))
	if top is ^: 2 (top becomes (v))
	if top is v: 1 (top becomes (v))
From 7 to 5 costs:
	if top is <: 4 (top becomes (>))
	if top is >: 3 (top becomes (v))
	if top is A: 4 (top becomes (v))
	if top is ^: 4 (top becomes (>))
	if top is v: 3 (top becomes (>))
From 7 to 6 costs:
	if top is <: 5 (top becomes (>))
	if top is >: 4 (top becomes (v))
	if top is A: 5 (top becomes (v))
	if top is ^: 5 (top becomes (>))
	if top is v: 4 (top becomes (>))
From 7 to 7 costs:
	if top is <: 0 (top becomes (<))
	if top is >: 0 (top becomes (>))
	if top is A: 0 (top becomes (A))
	if top is ^: 0 (top becomes (^))
	if top is v: 0 (top becomes (v))
From 7 to 8 costs:
	if top is <: 3 (top becomes (>))
	if top is >: 1 (top becomes (>))
	if top is A: 2 (top becomes (>))
	if top is ^: 3 (top becomes (>))
	if top is v: 2 (top becomes (>))
From 7 to 9 costs:
	if top is <: 4 (top becomes (>))
	if top is >: 2 (top becomes (>))
	if top is A: 3 (top becomes (>))
	if top is ^: 4 (top becomes (>))
	if top is v: 3 (top becomes (>))
From 7 to A costs:
	if top is <: 8 (top becomes (v))
	if top is >: 6 (top becomes (v))
	if top is A: 7 (top becomes (v))
	if top is ^: 8 (top becomes (v))
	if top is v: 7 (top becomes (v))
From 8 to 0 costs:
	if top is <: 4 (top becomes (v))
	if top is >: 4 (top becomes (v))
	if top is A: 5 (top becomes (v))
	if top is ^: 4 (top becomes (v))
	if top is v: 3 (top becomes (v))
From 8 to 1 costs:
	if top is <: 4 (top becomes (v))
	if top is >: 5 (top becomes (<))
	if top is A: 6 (top becomes (<))
	if top is ^: 5 (top becomes (<))
	if top is v: 4 (top becomes (<))
From 8 to 2 costs:
	if top is <: 3 (top becomes (v))
	if top is >: 3 (top becomes (v))
	if top is A: 4 (top becomes (v))
	if top is ^: 3 (top becomes (v))
	if top is v: 2 (top becomes (v))
From 8 to 3 costs:
	if top is <: 5 (top becomes (>))
	if top is >: 4 (top becomes (v))
	if top is A: 5 (top becomes (v))
	if top is ^: 5 (top becomes (>))
	if top is v: 4 (top becomes (>))
From 8 to 4 costs:
	if top is <: 3 (top becomes (v))
	if top is >: 4 (top becomes (<))
	if top is A: 5 (top becomes (<))
	if top is ^: 4 (top becomes (<))
	if top is v: 3 (top becomes (<))
From 8 to 5 costs:
	if top is <: 2 (top becomes (v))
	if top is >: 2 (top becomes (v))
	if top is A: 3 (top becomes (v))
	if top is ^: 2 (top becomes (v))
	if top is v: 1 (top becomes (v))
From 8 to 6 costs:
	if top is <: 4 (top becomes (>))
	if top is >: 3 (top becomes (v))
	if top is A: 4 (top becomes (v))
	if top is ^: 4 (top becomes (>))
	if top is v: 3 (top becomes (>))
From 8 to 7 costs:
	if top is <: 1 (top becomes (<))
	if top is >: 3 (top becomes (<))
	if top is A: 4 (top becomes (<))
	if top is ^: 3 (top becomes (<))
	if top is v: 2 (top becomes (<))
From 8 to 8 costs:
	if top is <: 0 (top becomes (<))
	if top is >: 0 (top becomes (>))
	if top is A: 0 (top becomes (A))
	if top is ^: 0 (top becomes (^))
	if top is v: 0 (top becomes (v))
From 8 to 9 costs:
	if top is <: 3 (top becomes (>))
	if top is >: 1 (top becomes (>))
	if top is A: 2 (top becomes (>))
	if top is ^: 3 (top becomes (>))
	if top is v: 2 (top becomes (>))
From 8 to A costs:
	if top is <: 6 (top becomes (>))
	if top is >: 5 (top becomes (v))
	if top is A: 6 (top becomes (v))
	if top is ^: 6 (top becomes (>))
	if top is v: 5 (top becomes (>))
From 9 to 0 costs:
	if top is <: 5 (top becomes (v))
	if top is >: 6 (top becomes (<))
	if top is A: 7 (top becomes (<))
	if top is ^: 6 (top becomes (<))
	if top is v: 5 (top becomes (<))
From 9 to 1 costs:
	if top is <: 5 (top becomes (v))
	if top is >: 6 (top becomes (<))
	if top is A: 7 (top becomes (<))
	if top is ^: 6 (top becomes (<))
	if top is v: 5 (top becomes (<))
From 9 to 2 costs:
	if top is <: 4 (top becomes (v))
	if top is >: 5 (top becomes (<))
	if top is A: 6 (top becomes (<))
	if top is ^: 5 (top becomes (<))
	if top is v: 4 (top becomes (<))
From 9 to 3 costs:
	if top is <: 3 (top becomes (v))
	if top is >: 3 (top becomes (v))
	if top is A: 4 (top becomes (v))
	if top is ^: 3 (top becomes (v))
	if top is v: 2 (top becomes (v))
From 9 to 4 costs:
	if top is <: 4 (top becomes (v))
	if top is >: 5 (top becomes (<))
	if top is A: 6 (top becomes (<))
	if top is ^: 5 (top becomes (<))
	if top is v: 4 (top becomes (<))
From 9 to 5 costs:
	if top is <: 3 (top becomes (v))
	if top is >: 4 (top becomes (<))
	if top is A: 5 (top becomes (<))
	if top is ^: 4 (top becomes (<))
	if top is v: 3 (top becomes (<))
From 9 to 6 costs:
	if top is <: 2 (top becomes (v))
	if top is >: 2 (top becomes (v))
	if top is A: 3 (top becomes (v))
	if top is ^: 2 (top becomes (v))
	if top is v: 1 (top becomes (v))
From 9 to 7 costs:
	if top is <: 2 (top becomes (<))
	if top is >: 4 (top becomes (<))
	if top is A: 5 (top becomes (<))
	if top is ^: 4 (top becomes (<))
	if top is v: 3 (top becomes (<))
From 9 to 8 costs:
	if top is <: 1 (top becomes (<))
	if top is >: 3 (top becomes (<))
	if top is A: 4 (top becomes (<))
	if top is ^: 3 (top becomes (<))
	if top is v: 2 (top becomes (<))
From 9 to 9 costs:
	if top is <: 0 (top becomes (<))
	if top is >: 0 (top becomes (>))
	if top is A: 0 (top becomes (A))
	if top is ^: 0 (top becomes (^))
	if top is v: 0 (top becomes (v))
From 9 to A costs:
	if top is <: 4 (top becomes (v))
	if top is >: 4 (top becomes (v))
	if top is A: 5 (top becomes (v))
	if top is ^: 4 (top becomes (v))
	if top is v: 3 (top becomes (v))
From < to < costs:
	if top is <: 0 (top becomes (<))
	if top is >: 0 (top becomes (>))
	if top is A: 0 (top becomes (A))
	if top is ^: 0 (top becomes (^))
	if top is v: 0 (top becomes (v))
From < to > costs:
	if top is <: 4 (top becomes (>))
	if top is >: 2 (top becomes (>))
	if top is A: 3 (top becomes (>))
	if top is ^: 4 (top becomes (>))
	if top is v: 3 (top becomes (>))
From < to A costs:
	if top is <: 7 (top becomes (^))
	if top is >: 5 (top becomes (^))
	if top is A: 6 (top becomes (^))
	if top is ^: 7 (top becomes (^))
	if top is v: 6 (top becomes (^))
From < to ^ costs:
	if top is <: 6 (top becomes (^))
	if top is >: 4 (top becomes (^))
	if top is A: 5 (top becomes (^))
	if top is ^: 6 (top becomes (^))
	if top is v: 5 (top becomes (^))
From < to v costs:
	if top is <: 3 (top becomes (>))
	if top is >: 1 (top becomes (>))
	if top is A: 2 (top becomes (>))
	if top is ^: 3 (top becomes (>))
	if top is v: 2 (top becomes (>))
From > to < costs:
	if top is <: 2 (top becomes (<))
	if top is >: 4 (top becomes (<))
	if top is A: 5 (top becomes (<))
	if top is ^: 4 (top becomes (<))
	if top is v: 3 (top becomes (<))
From > to > costs:
	if top is <: 0 (top becomes (<))
	if top is >: 0 (top becomes (>))
	if top is A: 0 (top becomes (A))
	if top is ^: 0 (top becomes (^))
	if top is v: 0 (top becomes (v))
From > to A costs:
	if top is <: 3 (top becomes (^))
	if top is >: 3 (top becomes (^))
	if top is A: 2 (top becomes (^))
	if top is ^: 1 (top becomes (^))
	if top is v: 2 (top becomes (^))
From > to ^ costs:
	if top is <: 4 (top becomes (^))
	if top is >: 6 (top becomes (<))
	if top is A: 5 (top becomes (<))
	if top is ^: 4 (top becomes (<))
	if top is v: 5 (top becomes (<))
From > to v costs:
	if top is <: 1 (top becomes (<))
	if top is >: 3 (top becomes (<))
	if top is A: 4 (top becomes (<))
	if top is ^: 3 (top becomes (<))
	if top is v: 2 (top becomes (<))
From A to 0 costs:
	if top is <: 1 (top becomes (<))
	if top is >: 3 (top becomes (<))
	if top is A: 4 (top becomes (<))
	if top is ^: 3 (top becomes (<))
	if top is v: 2 (top becomes (<))
From A to 1 costs:
	if top is <: 7 (top becomes (<))
	if top is >: 7 (top becomes (<))
	if top is A: 6 (top becomes (<))
	if top is ^: 5 (top becomes (<))
	if top is v: 6 (top becomes (<))
From A to 2 costs:
	if top is <: 4 (top becomes (^))
	if top is >: 6 (top becomes (^))
	if top is A: 5 (top becomes (<))
	if top is ^: 4 (top becomes (<))
	if top is v: 5 (top becomes (^))
From A to 3 costs:
	if top is <: 3 (top becomes (^))
	if top is >: 3 (top becomes (^))
	if top is A: 2 (top becomes (^))
	if top is ^: 1 (top becomes (^))
	if top is v: 2 (top becomes (^))
From A to 4 costs:
	if top is <: 8 (top becomes (<))
	if top is >: 8 (top becomes (<))
	if top is A: 7 (top becomes (<))
	if top is ^: 6 (top becomes (<))
	if top is v: 7 (top becomes (<))
From A to 5 costs:
	if top is <: 5 (top becomes (^))
	if top is >: 7 (top becomes (^))
	if top is A: 6 (top becomes (<))
	if top is ^: 5 (top becomes (<))
	if top is v: 6 (top becomes (^))
From A to 6 costs:
	if top is <: 4 (top becomes (^))
	if top is >: 4 (top becomes (^))
	if top is A: 3 (top becomes (^))
	if top is ^: 2 (top becomes (^))
	if top is v: 3 (top becomes (^))
From A to 7 costs:
	if top is <: 9 (top becomes (<))
	if top is >: 9 (top becomes (<))
	if top is A: 8 (top becomes (<))
	if top is ^: 7 (top becomes (<))
	if top is v: 8 (top becomes (<))
From A to 8 costs:
	if top is <: 6 (top becomes (^))
	if top is >: 8 (top becomes (<))
	if top is A: 7 (top becomes (<))
	if top is ^: 6 (top becomes (<))
	if top is v: 7 (top becomes (<))
From A to 9 costs:
	if top is <: 5 (top becomes (^))
	if top is >: 5 (top becomes (^))
	if top is A: 4 (top becomes (^))
	if top is ^: 3 (top becomes (^))
	if top is v: 4 (top becomes (^))
From A to < costs:
	if top is <: 5 (top becomes (<))
	if top is >: 5 (top becomes (<))
	if top is A: 6 (top becomes (<))
	if top is ^: 5 (top becomes (<))
	if top is v: 4 (top becomes (<))
From A to > costs:
	if top is <: 2 (top becomes (v))
	if top is >: 2 (top becomes (v))
	if top is A: 3 (top becomes (v))
	if top is ^: 2 (top becomes (v))
	if top is v: 1 (top becomes (v))
From A to A costs:
	if top is <: 0 (top becomes (<))
	if top is >: 0 (top becomes (>))
	if top is A: 0 (top becomes (A))
	if top is ^: 0 (top becomes (^))
	if top is v: 0 (top becomes (v))
From A to ^ costs:
	if top is <: 1 (top becomes (<))
	if top is >: 3 (top becomes (<))
	if top is A: 4 (top becomes (<))
	if top is ^: 3 (top becomes (<))
	if top is v: 2 (top becomes (<))
From A to v costs:
	if top is <: 3 (top becomes (v))
	if top is >: 4 (top becomes (<))
	if top is A: 5 (top becomes (<))
	if top is ^: 4 (top becomes (<))
	if top is v: 3 (top becomes (<))
From ^ to < costs:
	if top is <: 4 (top becomes (<))
	if top is >: 4 (top becomes (<))
	if top is A: 5 (top becomes (<))
	if top is ^: 4 (top becomes (<))
	if top is v: 3 (top becomes (<))
From ^ to > costs:
	if top is <: 4 (top becomes (>))
	if top is >: 3 (top becomes (v))
	if top is A: 4 (top becomes (v))
	if top is ^: 4 (top becomes (>))
	if top is v: 3 (top becomes (>))
From ^ to A costs:
	if top is <: 3 (top becomes (>))
	if top is >: 1 (top becomes (>))
	if top is A: 2 (top becomes (>))
	if top is ^: 3 (top becomes (>))
	if top is v: 2 (top becomes (>))
From ^ to ^ costs:
	if top is <: 0 (top becomes (<))
	if top is >: 0 (top becomes (>))
	if top is A: 0 (top becomes (A))
	if top is ^: 0 (top becomes (^))
	if top is v: 0 (top becomes (v))
From ^ to v costs:
	if top is <: 2 (top becomes (v))
	if top is >: 2 (top becomes (v))
	if top is A: 3 (top becomes (v))
	if top is ^: 2 (top becomes (v))
	if top is v: 1 (top becomes (v))
From v to < costs:
	if top is <: 1 (top becomes (<))
	if top is >: 3 (top becomes (<))
	if top is A: 4 (top becomes (<))
	if top is ^: 3 (top becomes (<))
	if top is v: 2 (top becomes (<))
From v to > costs:
	if top is <: 3 (top becomes (>))
	if top is >: 1 (top becomes (>))
	if top is A: 2 (top becomes (>))
	if top is ^: 3 (top becomes (>))
	if top is v: 2 (top becomes (>))
From v to A costs:
	if top is <: 6 (top becomes (>))
	if top is >: 4 (top becomes (^))
	if top is A: 5 (top becomes (^))
	if top is ^: 4 (top becomes (>))
	if top is v: 5 (top becomes (>))
From v to ^ costs:
	if top is <: 3 (top becomes (^))
	if top is >: 3 (top becomes (^))
	if top is A: 2 (top becomes (^))
	if top is ^: 1 (top becomes (^))
	if top is v: 2 (top becomes (^))
From v to v costs:
	if top is <: 0 (top becomes (<))
	if top is >: 0 (top becomes (>))
	if top is A: 0 (top becomes (A))
	if top is ^: 0 (top becomes (^))
	if top is v: 0 (top becomes (v))
0
╍ Solution took: 5.062786ms ╍
╍╍╍ Part 2: ╍╍╍
0
╍ Solution took: 411ns ╍
